// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model Server {
  id                String          @id @default(cuid())
  title             String          @default("")
  slug              String          @unique @default("")
  isOfficial        Boolean         @default(false)
  description       String          @default("")
  overview          String          @default("")
  icon              Json?
  category          ServerCategory? @relation("Server_category", fields: [categoryId], references: [id])
  categoryId        String?         @map("category")
  homepage          String          @default("")
  tools             Json?           @default("{}")
  settings          Json?           @default("{}")
  githubUrl         String          @unique @default("")
  githubOwner       String          @default("")
  githubLicense     String          @default("")
  githubLanguage    String          @default("")
  githubPublishedAt DateTime?       @default(now())
  keywords          String          @default("")
  createdAt         DateTime?       @default(now())
  updatedAt         DateTime?       @default(now())

  @@index([title])
  @@index([description])
  @@index([categoryId])
}

model ServerCategory {
  id                   String    @id @default(cuid())
  title                String    @unique @default("")
  slug                 String    @unique @default("")
  icon                 Json?
  isDefault            Boolean   @default(false)
  createdAt            DateTime? @default(now())
  updatedAt            DateTime? @default(now())
  from_Server_category Server[]  @relation("Server_category")
}

model Page {
  id             String    @id @default(cuid())
  title          String    @default("")
  slug           String    @unique @default("")
  subtitle       String    @default("")
  description    String    @default("")
  seoTitle       String    @default("")
  seoDescription String    @default("")
  seoKeywords    String    @default("")
  seoIcon        Json?
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @default(now())
}

model Testimonial {
  id        String    @id @default(cuid())
  fullName  String    @default("")
  title     String    @default("")
  avatar    Json?
  feedback  String    @default("")
  createdAt DateTime? @default(now())
}

model FrequentlyAskedQuestion {
  id          String    @id @default(cuid())
  title       String    @default("")
  description String    @default("")
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now())
}

model Config {
  id          Int       @id
  releaseDate DateTime? @default(now())
}

model Waitlist {
  id        String    @id @default(cuid())
  email     String    @unique @default("")
  createdAt DateTime? @default(now())
}

model Log {
  id        String       @id @default(cuid())
  title     String       @default("")
  type      LogTypeType?
  error     Json?        @default("{}")
  createdAt DateTime?    @default(now())
}

model User {
  id         String    @id @default(cuid())
  identityId String    @unique @default("")
  name       String    @default("")
  email      String    @unique @default("")
  updatedAt  DateTime? @default(now())
  createdAt  DateTime? @default(now())
}

model Admin {
  id        String         @id @default(cuid())
  name      String         @default("")
  email     String         @unique @default("")
  password  String
  role      AdminRoleType? @default(SuperAdmin)
  createdAt DateTime?      @default(now())
}

enum LogTypeType {
  HandleOnMcpFileCreatedUpdatedFailed
}

enum AdminRoleType {
  SuperAdmin
  Editor
}
